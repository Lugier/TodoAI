name: Security Checks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  secret-scan:
    name: Detect secrets and sensitive data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.42.0
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
          
      - name: Check for .env files
        run: |
          if [ -f ".env" ]; then
            echo "ERROR: .env file detected. Please remove it and use .env.sample instead."
            exit 1
          fi
          echo "No .env file detected. Good!"
          
      - name: Check API keys in code
        run: |
          if grep -r "api_key\|api_secret\|password\|credentials\|secret_key" --include="*.py" .; then
            echo "WARNING: Potential API keys or secrets found in code. Please review."
            exit 1
          fi
          echo "No obvious API keys found in code. Good!"
          
      - name: Check for data directory
        run: |
          if [ -d "data" ] && [ "$(ls -A data 2>/dev/null)" ]; then
            echo "WARNING: Non-empty data directory detected. Check for sensitive files."
            ls -la data/
            exit 1
          fi
          echo "Data directory is empty or not present. Good!"

  python-lint:
    name: Python linting and security scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Security scan with bandit
        run: bandit -r ./src -f json -o bandit-report.json || true
        
      - name: Check dependencies with safety
        run: safety check -r requirements.txt || true
        
      - name: Run Pylint
        run: pylint ./src --disable=C0111,C0103 || true 